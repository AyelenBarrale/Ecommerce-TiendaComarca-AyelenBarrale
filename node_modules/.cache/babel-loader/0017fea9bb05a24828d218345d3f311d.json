{"ast":null,"code":"var _jsxFileName = \"/Users/ayelen/Documents/Web-Development/React-JS/proyecto-final/Comarca/src/Components/CheckoutForm/Orders.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport CheckoutForm from \"./CheckoutForm\";\nimport { db } from \"../../firebase\";\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Orders = () => {\n  _s();\n\n  const [orden, setOrden] = useState([]);\n  const {\n    id\n  } = useParams();\n\n  const addOrden = async object => {\n    await db.collection(\"ordenes\").doc().set(object);\n    console.log(\"producto agregado\");\n  };\n\n  useEffect(() => {\n    const Orden = db.collection('ordenes').doc(id);\n    Orden.get().then(doc => {\n      if (doc.exists) {\n        setOrden(doc.id);\n        console.log(orden);\n      }\n    });\n  }, [id]);\n\n  const getProducts = () => {\n    db.collection('productos').onSnapshot(querySnapshot => {\n      const docs = [];\n      querySnapshot.forEach(doc => {\n        // console.log(doc.data());\n        // console.log(doc.id);\n        docs.push({ ...doc.data(),\n          id: doc.id\n        });\n      });\n      setProducts(docs);\n    });\n  }; // Al poner el array vacio se va a ejecutar la primera vez que cargue el componente\n\n\n  useEffect(() => {\n    getProducts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(CheckoutForm, {\n      addOrden: addOrden,\n      orden: orden\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Orders, \"6sUoQEfkGRHaceY7fGGtYvnoZnQ=\", false, function () {\n  return [useParams];\n});\n\n_c = Orders;\nexport default Orders;\n\nvar _c;\n\n$RefreshReg$(_c, \"Orders\");","map":{"version":3,"sources":["/Users/ayelen/Documents/Web-Development/React-JS/proyecto-final/Comarca/src/Components/CheckoutForm/Orders.js"],"names":["React","useState","useEffect","CheckoutForm","db","useParams","Orders","orden","setOrden","id","addOrden","object","collection","doc","set","console","log","Orden","get","then","exists","getProducts","onSnapshot","querySnapshot","docs","forEach","push","data","setProducts"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,SAASC,EAAT,QAAmB,gBAAnB;AAEA,SAAQC,SAAR,QAAwB,kBAAxB;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM;AAACQ,IAAAA;AAAD,MAAOJ,SAAS,EAAtB;;AAEA,QAAMK,QAAQ,GAAG,MAAOC,MAAP,IAAkB;AACjC,UAAMP,EAAE,CAACQ,UAAH,CAAc,SAAd,EAAyBC,GAAzB,GAA+BC,GAA/B,CAAmCH,MAAnC,CAAN;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACD,GAHD;;AAKAd,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMe,KAAK,GAAGb,EAAE,CAACQ,UAAH,CAAc,SAAd,EAAyBC,GAAzB,CAA6BJ,EAA7B,CAAd;AACAQ,IAAAA,KAAK,CAACC,GAAN,GAAYC,IAAZ,CAAkBN,GAAD,IAAS;AACxB,UAAIA,GAAG,CAACO,MAAR,EAAgB;AACdZ,QAAAA,QAAQ,CAACK,GAAG,CAACJ,EAAL,CAAR;AACAM,QAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;AACD;AACF,KALD;AAMD,GARQ,EAQN,CAACE,EAAD,CARM,CAAT;;AAUA,QAAMY,WAAW,GAAG,MAAM;AAC1BjB,IAAAA,EAAE,CAACQ,UAAH,CAAc,WAAd,EAA2BU,UAA3B,CAAuCC,aAAD,IAAmB;AACxD,YAAMC,IAAI,GAAG,EAAb;AACAD,MAAAA,aAAa,CAACE,OAAd,CAAuBZ,GAAD,IAAS;AAC9B;AACA;AACAW,QAAAA,IAAI,CAACE,IAAL,CAAU,EAAE,GAAGb,GAAG,CAACc,IAAJ,EAAL;AAAiBlB,UAAAA,EAAE,EAAEI,GAAG,CAACJ;AAAzB,SAAV;AACA,OAJD;AAKAmB,MAAAA,WAAW,CAACJ,IAAD,CAAX;AACA,KARD;AASA,GAVA,CApBmB,CAgCpB;;;AACAtB,EAAAA,SAAS,CAAC,MAAM;AACfmB,IAAAA,WAAW;AACX,GAFQ,EAEN,EAFM,CAAT;AAKC,sBACE;AAAA,2BACE,QAAC,YAAD;AAAc,MAAA,QAAQ,EAAEX,QAAxB;AAAkC,MAAA,KAAK,EAAEH;AAAzC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA3CD;;GAAMD,M;UAGSD,S;;;KAHTC,M;AA6CN,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport CheckoutForm from \"./CheckoutForm\";\n\nimport { db } from \"../../firebase\";\n\nimport {useParams} from 'react-router-dom';\n\nconst Orders = () => {\n  const [orden, setOrden] = useState([]);\n\n  const {id} = useParams();\n\n  const addOrden = async (object) => {\n    await db.collection(\"ordenes\").doc().set(object);\n    console.log(\"producto agregado\");\n  };\n\n  useEffect(() => {\n    const Orden = db.collection('ordenes').doc(id);\n    Orden.get().then((doc) => {\n      if (doc.exists) {\n        setOrden(doc.id);\n        console.log(orden)\n      }\n    });\n  }, [id]);\n\n  const getProducts = () => {\n\t\tdb.collection('productos').onSnapshot((querySnapshot) => {\n\t\t\tconst docs = [];\n\t\t\tquerySnapshot.forEach((doc) => {\n\t\t\t\t// console.log(doc.data());\n\t\t\t\t// console.log(doc.id);\n\t\t\t\tdocs.push({ ...doc.data(), id: doc.id });\n\t\t\t});\n\t\t\tsetProducts(docs);\n\t\t});\n\t};\n\n\t// Al poner el array vacio se va a ejecutar la primera vez que cargue el componente\n\tuseEffect(() => {\n\t\tgetProducts();\n\t}, []);\n\n\n  return (\n    <div>\n      <CheckoutForm addOrden={addOrden} orden={orden} />\n    </div>\n  );\n};\n\nexport default Orders;\n"]},"metadata":{},"sourceType":"module"}