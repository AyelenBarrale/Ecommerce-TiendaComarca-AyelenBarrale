{"ast":null,"code":"var _jsxFileName = \"/Users/ayelen/Documents/Web-Development/React-JS/proyecto-final/Comarca/src/Contexts/OrdersContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useContext } from \"react\";\nexport const OrdersContext = /*#__PURE__*/createContext({});\nexport const useOrdersContext = () => {\n  _s();\n\n  return useContext(OrdersContext);\n};\n\n_s(useOrdersContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nimport { db } from \"../firebase\";\nimport firebase from \"firebase/app\";\nimport { useCartContext } from \"../Contexts/CartContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OrdersProvider = ({\n  children\n}) => {\n  _s2();\n\n  let keyId;\n  let buyerInfo;\n  const {\n    cart,\n    clearCart,\n    reduceCart\n  } = useCartContext();\n\n  const clear = () => clearCart();\n\n  console.log(cart);\n  const itemsCart = cart.map(cartItem => {\n    return {\n      id: cartItem.id,\n      nombre: cartItem.nombre,\n      precio: cartItem.precio,\n      quantity: cartItem.quantity\n    };\n  });\n\n  const addOrdenInfo = values => {\n    buyerInfo = values;\n  };\n\n  const addOrden = () => {\n    db.collection(\"ordenes\").doc().where(precio, \"==\", \"300\");\n    console;\n    /* db.collection(\"ordenes\")\n      .add({\n        buyer: buyerInfo,\n        items: itemsCart,\n        date: firebase.firestore.FieldValue.serverTimestamp(),\n        total: reduceCart,\n      })\n      .then((docRef) => {\n        keyId = docRef.id;\n        console.log(keyId)\n        updateStock();\n        clear();\n      })\n      .catch((error) => {\n        console.error(\"Error adding document: \", error);\n      }); */\n  };\n\n  const updateStock = () => {\n    itemsCart.forEach(async elem => {\n      const product = await db.collection(\"productos\").doc(elem.id).get();\n      const ProdStock = product.data().stock - elem.quantity;\n      await db.collection(\"productos\").doc(elem.id).update({\n        stock: ProdStock\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(OrdersContext.Provider, {\n    value: {\n      addOrden,\n      keyId,\n      addOrdenInfo\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(OrdersProvider, \"I8Z31JIIHDbIqTx1wFsA03KyNEs=\", false, function () {\n  return [useCartContext];\n});\n\n_c = OrdersProvider;\nexport default OrdersProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrdersProvider\");","map":{"version":3,"sources":["/Users/ayelen/Documents/Web-Development/React-JS/proyecto-final/Comarca/src/Contexts/OrdersContext.js"],"names":["React","createContext","useContext","OrdersContext","useOrdersContext","db","firebase","useCartContext","OrdersProvider","children","keyId","buyerInfo","cart","clearCart","reduceCart","clear","console","log","itemsCart","map","cartItem","id","nombre","precio","quantity","addOrdenInfo","values","addOrden","collection","doc","where","updateStock","forEach","elem","product","get","ProdStock","data","stock","update"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AAEA,OAAO,MAAMC,aAAa,gBAAGF,aAAa,CAAC,EAAD,CAAnC;AACP,OAAO,MAAMG,gBAAgB,GAAG;AAAA;;AAAA,SAAMF,UAAU,CAACC,aAAD,CAAhB;AAAA,CAAzB;;GAAMC,gB;;AAEb,SAASC,EAAT,QAAmB,aAAnB;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,SAASC,cAAT,QAA+B,yBAA/B;;;AAGA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACvC,MAAIC,KAAJ;AACA,MAAIC,SAAJ;AAGA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,SAAR;AAAmBC,IAAAA;AAAnB,MAAkCP,cAAc,EAAtD;;AAEA,QAAMQ,KAAK,GAAG,MAAMF,SAAS,EAA7B;;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACA,QAAMM,SAAS,GAAGN,IAAI,CAACO,GAAL,CAAUC,QAAD,IAAc;AACvC,WAAO;AACLC,MAAAA,EAAE,EAAED,QAAQ,CAACC,EADR;AAELC,MAAAA,MAAM,EAAEF,QAAQ,CAACE,MAFZ;AAGLC,MAAAA,MAAM,EAAEH,QAAQ,CAACG,MAHZ;AAILC,MAAAA,QAAQ,EAAEJ,QAAQ,CAACI;AAJd,KAAP;AAMD,GAPiB,CAAlB;;AASA,QAAMC,YAAY,GAAIC,MAAD,IAAY;AAC/Bf,IAAAA,SAAS,GAAGe,MAAZ;AACD,GAFD;;AAIA,QAAMC,QAAQ,GAAG,MAAM;AACnBtB,IAAAA,EAAE,CAACuB,UAAH,CAAc,SAAd,EAAyBC,GAAzB,GAA+BC,KAA/B,CAAqCP,MAArC,EAA6C,IAA7C,EAAmD,KAAnD;AACAP,IAAAA,OAAO;AACT;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACG,GAnBD;;AAqBA,QAAMe,WAAW,GAAG,MAAM;AACxBb,IAAAA,SAAS,CAACc,OAAV,CAAkB,MAAOC,IAAP,IAAgB;AAChC,YAAMC,OAAO,GAAG,MAAM7B,EAAE,CAACuB,UAAH,CAAc,WAAd,EAA2BC,GAA3B,CAA+BI,IAAI,CAACZ,EAApC,EAAwCc,GAAxC,EAAtB;AACA,YAAMC,SAAS,GAAGF,OAAO,CAACG,IAAR,GAAeC,KAAf,GAAuBL,IAAI,CAACT,QAA9C;AACA,YAAMnB,EAAE,CAACuB,UAAH,CAAc,WAAd,EAA2BC,GAA3B,CAA+BI,IAAI,CAACZ,EAApC,EAAwCkB,MAAxC,CAA+C;AACnDD,QAAAA,KAAK,EAAEF;AAD4C,OAA/C,CAAN;AAGD,KAND;AAOD,GARD;;AAUA,sBACE,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAAET,MAAAA,QAAF;AAAYjB,MAAAA,KAAZ;AAAmBe,MAAAA;AAAnB,KAA/B;AAAA,cACGhB;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA1DD;;IAAMD,c;UAKoCD,c;;;KALpCC,c;AA4DN,eAAeA,cAAf","sourcesContent":["import React, { createContext, useContext } from \"react\";\n\nexport const OrdersContext = createContext({});\nexport const useOrdersContext = () => useContext(OrdersContext);\n\nimport { db } from \"../firebase\";\nimport firebase from \"firebase/app\";\nimport { useCartContext } from \"../Contexts/CartContext\";\n\n\nconst OrdersProvider = ({ children }) => {\n  let keyId;\n  let buyerInfo;\n\n\n  const { cart, clearCart, reduceCart } = useCartContext();\n\n  const clear = () => clearCart();\n  console.log(cart);\n  const itemsCart = cart.map((cartItem) => {\n    return {\n      id: cartItem.id,\n      nombre: cartItem.nombre,\n      precio: cartItem.precio,\n      quantity: cartItem.quantity,\n    };\n  });\n\n  const addOrdenInfo = (values) => {\n    buyerInfo = values;\n  };\n\n  const addOrden = () => {\n      db.collection(\"ordenes\").doc().where(precio, \"==\", \"300\");\n      console\n    /* db.collection(\"ordenes\")\n      .add({\n        buyer: buyerInfo,\n        items: itemsCart,\n        date: firebase.firestore.FieldValue.serverTimestamp(),\n        total: reduceCart,\n      })\n      .then((docRef) => {\n        keyId = docRef.id;\n        console.log(keyId)\n        updateStock();\n        clear();\n      })\n      .catch((error) => {\n        console.error(\"Error adding document: \", error);\n      }); */\n  };\n\n  const updateStock = () => {\n    itemsCart.forEach(async (elem) => {\n      const product = await db.collection(\"productos\").doc(elem.id).get();\n      const ProdStock = product.data().stock - elem.quantity;\n      await db.collection(\"productos\").doc(elem.id).update({\n        stock: ProdStock,\n      });\n    });\n  };\n\n  return (\n    <OrdersContext.Provider value={{ addOrden, keyId, addOrdenInfo }}>\n      {children}\n    </OrdersContext.Provider>\n  );\n};\n\nexport default OrdersProvider;\n"]},"metadata":{},"sourceType":"module"}