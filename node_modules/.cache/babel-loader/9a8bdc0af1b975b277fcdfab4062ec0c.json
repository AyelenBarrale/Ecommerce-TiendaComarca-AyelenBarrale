{"ast":null,"code":"var _jsxFileName = \"/Users/ayelen/Documents/Web-Development/React-JS/proyecto-final/Comarca/src/Contexts/OrdersContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useContext } from \"react\";\nexport const OrdersContext = /*#__PURE__*/createContext({});\nexport const useOrdersContext = () => {\n  _s();\n\n  return useContext(OrdersContext);\n};\n\n_s(useOrdersContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nimport { db } from \"../firebase\";\nimport firebase from \"firebase/app\";\nimport { useCartContext } from \"../Contexts/CartContext\";\nimport { Redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OrdersProvider = ({\n  children\n}) => {\n  _s2();\n\n  let keyId;\n  let buyerInfo;\n\n  let redirect = () => {\n    /*#__PURE__*/\n    _jsxDEV(Redirect, {\n      to: \"/confirmacion\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }, this);\n  };\n\n  const {\n    cart,\n    clearCart,\n    reduceCart\n  } = useCartContext();\n\n  const clear = () => clearCart();\n\n  console.log(cart);\n  const itemsCart = cart.map(cartItem => {\n    return {\n      id: cartItem.id,\n      nombre: cartItem.nombre,\n      precio: cartItem.precio,\n      quantity: cartItem.quantity\n    };\n  });\n\n  const addOrdenInfo = values => {\n    buyerInfo = values;\n  };\n\n  const addOrden = () => {\n    db.collection(\"ordenes\").add({\n      buyer: buyerInfo,\n      items: itemsCart,\n      date: firebase.firestore.FieldValue.serverTimestamp(),\n      total: reduceCart\n    }).then(docRef => {\n      keyId = docRef.id;\n      updateStock();\n      clear();\n      redirect();\n    }).catch(error => {\n      console.error(\"Error adding document: \", error);\n    });\n  };\n\n  const updateStock = () => {\n    itemsCart.forEach(async elem => {\n      const product = await db.collection(\"productos\").doc(elem.id).get();\n      const ProdStock = product.data().stock - elem.quantity;\n      await db.collection(\"productos\").doc(elem.id).update({\n        stock: ProdStock\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(OrdersContext.Provider, {\n    value: {\n      addOrden,\n      keyId,\n      addOrdenInfo\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(OrdersProvider, \"I8Z31JIIHDbIqTx1wFsA03KyNEs=\", false, function () {\n  return [useCartContext];\n});\n\n_c = OrdersProvider;\nexport default OrdersProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrdersProvider\");","map":{"version":3,"sources":["/Users/ayelen/Documents/Web-Development/React-JS/proyecto-final/Comarca/src/Contexts/OrdersContext.js"],"names":["React","createContext","useContext","OrdersContext","useOrdersContext","db","firebase","useCartContext","Redirect","OrdersProvider","children","keyId","buyerInfo","redirect","cart","clearCart","reduceCart","clear","console","log","itemsCart","map","cartItem","id","nombre","precio","quantity","addOrdenInfo","values","addOrden","collection","add","buyer","items","date","firestore","FieldValue","serverTimestamp","total","then","docRef","updateStock","catch","error","forEach","elem","product","doc","get","ProdStock","data","stock","update"],"mappings":"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","sourcesContent":["import React, { createContext, useContext } from \"react\";\n\nexport const OrdersContext = createContext({});\nexport const useOrdersContext = () => useContext(OrdersContext);\n\nimport { db } from \"../firebase\";\nimport firebase from \"firebase/app\";\nimport { useCartContext } from \"../Contexts/CartContext\";\n\nimport { Redirect } from \"react-router-dom\";\n\nconst OrdersProvider = ({ children }) => {\n  let keyId;\n  let buyerInfo;\n\n  let redirect = () => {\n    <Redirect to='/confirmacion' /> \n  };\n\n  const { cart, clearCart, reduceCart } = useCartContext();\n\n  const clear = () => clearCart();\n  console.log(cart);\n  const itemsCart = cart.map((cartItem) => {\n    return {\n      id: cartItem.id,\n      nombre: cartItem.nombre,\n      precio: cartItem.precio,\n      quantity: cartItem.quantity,\n    };\n  });\n\n  const addOrdenInfo = (values) => {\n    buyerInfo = values;\n  };\n\n  const addOrden = () => {\n    db.collection(\"ordenes\")\n      .add({\n        buyer: buyerInfo,\n        items: itemsCart,\n        date: firebase.firestore.FieldValue.serverTimestamp(),\n        total: reduceCart,\n      })\n      .then((docRef) => {\n        keyId = docRef.id;\n        updateStock();\n        clear();\n        redirect()\n      })\n      .catch((error) => {\n        console.error(\"Error adding document: \", error);\n      });\n  };\n\n  const updateStock = () => {\n    itemsCart.forEach(async (elem) => {\n      const product = await db.collection(\"productos\").doc(elem.id).get();\n      const ProdStock = product.data().stock - elem.quantity;\n      await db.collection(\"productos\").doc(elem.id).update({\n        stock: ProdStock,\n      });\n    });\n  };\n\n  return (\n    <OrdersContext.Provider value={{ addOrden, keyId, addOrdenInfo }}>\n      {children}\n    </OrdersContext.Provider>\n  );\n};\n\nexport default OrdersProvider;\n"]},"metadata":{},"sourceType":"module"}